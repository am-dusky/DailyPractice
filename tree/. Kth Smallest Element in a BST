void solve(TreeNode* root,vector<int>&v){
        if(!root)
            return;
        solve(root->left,v);
        v.push_back(root->val);
        solve(root->right,v);
    }
    int kthSmallest(TreeNode* root, int k) {
        vector<int>ans;
        solve(root,ans);
        
        return ans[k-1];
    }
    
    
    
    method 2. O(n) time and O(1) space
    void solve(TreeNode* root,int &k,int &ans){
        if(!root)
            return;
        solve(root->left,k,ans);
        k--;
        if(k==0) 
            ans=root->val;

        solve(root->right,k,ans);
    }
    int kthSmallest(TreeNode* root, int k) {
        int ans=INT_MIN;
        solve(root,k,ans);
        return ans;
    }
